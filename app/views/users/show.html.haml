- title! @user == current_user ? 'Profile' : @user.full_name
- if policy(@user).index?
    %ul.uk-breadcrumb
        %li= link_to 'Administration', admin_path
        %li= link_to 'Users', admin_users_path
        %li.uk-active= @user.login
.uk-grid
    .uk-width-medium-1-4.uk-hidden-small
        = image_tag("users/#{@user.login}.jpg", class: 'uk-thumbnail uk-width-1-1')
    .uk-width-medium-3-4
        .uk-panel.uk-panel-box.uk-panel-box-primary.uk-panel-header
            .uk-panel-title= @user.full_name
            %dl.uk-description-list.uk-description-list-horizontal
                %dt Login
                %dd= @user.login
                %dt E-mail
                %dd= link_to @user.email, 'mailto:' + @user.email
        - if policy(@user).update?
            .uk-panel.uk-panel-box.uk-panel-header
                .uk-panel-title Administration
                %dl.uk-description-list.uk-description-list-horizontal
                    %dt Account status
                    = user_status(@user)
                    %dt Connection count
                    %dd= @user.sign_in_count
                - if @user.last_sign_in_at?
                    %h4 Last connection
                    %dl.uk-description-list.uk-description-list-horizontal
                        %dt From
                        %dd= @user.current_sign_in_ip
                        %dt Time
                        %dd= l(@user.current_sign_in_at)
        = render partial: 'teacher/profile', object: @user.as_teacher, as: :teacher if @user.is_teacher?
        = render partial: 'student/profile', object: @user.as_student, as: :student if @user.is_student?
- sidebar! do |s|
    - s.header 'Users management'
    - if policy(User).create?
        = s.link 'Create an user', new_admin_user_path, icon: 'plus'
    - s.header 'Account management'
    - if policy(@user).reset_password?
        = s.link(@user.password_set? ? 'Reset password' : 'Initialize password', admin_user_reset_password_path(@user), link: {method: :post}, icon: 'key')
    - if @user.locked_at? and policy(@user).update?
        = s.link('Unlock', admin_user_unlock_path(@user), link: {method: :post}, icon: 'unlock')
    - s.header 'Roles'
    - if not @user.is_admin? and policy(Admin).create?
        = s.link 'Promote as administrator', admin_user_promote_admin_path(@user)
    - elsif @user.is_admin? and policy(@user.as_admin).destroy?
        = s.link 'Demote from administrator', admin_user_demote_admin_path(@user)
    - if not @user.is_teacher? and policy(Teacher).create?
        = s.link 'Promote as teacher', admin_user_promote_teacher_path(@user)
    - elsif @user.is_teacher? and policy(@user.as_teacher).destroy?
        = s.link 'Demote from teacher', admin_user_demote_teacher_path(@user)
    - if not @user.is_student? and policy(Student).create?
        = s.link 'Promote as student', admin_user_promote_student_path(@user)
    - elsif @user.is_student? and policy(@user.as_student).destroy?
        = s.link 'Demote from student', admin_user_demote_student_path(@user)
    - if @user.is_teacher?
        - @user.as_teacher.tap do |teacher|
            - s.header 'Teacher management'
            - if policy(teacher).update?
                = s.link 'Assign classes', admin_teacher_assign_path(teacher), icon: 'university'
